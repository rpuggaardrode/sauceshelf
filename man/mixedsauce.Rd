% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mixedsauce.R
\name{mixedsauce}
\alias{mixedsauce}
\title{Voice quality measures from a combination of sources}
\usage{
mixedsauce(
  inputDir,
  pitch = "praat",
  formant = "praat",
  bw = "emu",
  harmonicAmplitude = "emu",
  slope = "emu",
  harmonicAmplitudeUncorrected = "emu",
  slopeUncorrected = "emu",
  cpp = "praat",
  hnr = "praat",
  intensity = "praat",
  soe = "emu",
  intervalFixed = 0.005,
  f0min = 50,
  f0max = 300,
  windowLength = 0.025,
  maxNumFormants = 5,
  bw_hawksMiller = TRUE,
  recursive = FALSE,
  reaperPath = NULL,
  ...
)
}
\arguments{
\item{inputDir}{String giving a directory containing sound files to analyze.}

\item{pitch}{A string giving the desired source of pitch values; should be
either `praat` (default), `emu`, or `reaper`. The latter option requires the
`reapeR` library to be installed. Alternatively `FALSE` will suppress pitch.}

\item{formant}{A string giving the desired source of pitch values; should be
either `praat` (default) or `emu`. Alternatively `FALSE` will suppress
formants.}

\item{bw}{A string giving the desired source of bandwidth values; should be
either `praat` or `emu` (default). Alternatively `FALSE` will suppress
bandwidths.}

\item{harmonicAmplitude}{A string giving the desired source of corrected
harmonic amplitude values;  should be either `praat` or `emu` (default).
Alternatively `FALSE` will suppress corrected harmonic amplitudes.}

\item{slope}{A string giving the desired source of corrected
spectral slope values;  should be either `praat` or `emu` (default).
Alternatively `FALSE` will suppress corrected spectral slope.}

\item{harmonicAmplitudeUncorrected}{A string giving the desired source of
uncorrected harmonic amplitude values;  should be either `praat` or `emu`
(default).
Alternatively `FALSE` will suppress uncorrected harmonic amplitudes.}

\item{slopeUncorrected}{A string giving the desired source of uncorrected
spectral slope values;  should be either `praat` or `emu` (default).
Alternatively `FALSE` will suppress uncorrected spectral slope.}

\item{cpp}{A string giving the desired source of cepstral peak prominence
values;  should be either `praat` (default) or `emu`. Alternatively
`FALSE` will suppress CPP.}

\item{hnr}{A string giving the desired source of harmonics-to-noise ratio
values;  should be either `praat` (default) or `emu`.
`emu` is experimental and quite slow, mostly included for completeness.
Alternatively  `FALSE` will suppress corrected spectral slope.}

\item{intensity}{A string giving the desired source of intensity
values;  should be either `praat` (default) or `emu`. Alternatively
`FALSE` will suppress intensity.}

\item{soe}{A string giving the desired source of strength of excitation
values;  should be either `praat` or `emu` (default). Alternatively
`FALSE` will suppress corrected spectral slope.}

\item{intervalFixed}{Numeric; how often should measures be taken (in
seconds)? Default is `0.005`.}

\item{f0min}{Integer giving the pitch floor. Default is `50`.}

\item{f0max}{Integer giving the pitch ceiling. Default is `300`.}

\item{windowLength}{Numeric giving the length of the analysis window (in
seconds). Default is `0.025`.}

\item{maxNumFormants}{Integer giving the maximum number of formants to
estimate. Default is `5`.}

\item{bw_hawksMiller}{Boolean; should bandwidths be estimated using the
Hawks-Miller formula? Default is `TRUE`. If `FALSE`, raw bandwidths are
returned.}

\item{recursive}{Logical; should sound files in subdirectories of
`inputDir` be analyzed? Default is `FALSE`.}

\item{reaperPath}{String giving the path to a REAPER installation on the
computer. Default is `NULL`; it is assumed that REAPER is installed along
with the `reapeR` library.}

\item{...}{}
}
\value{
Data frame with the specified measures.
}
\description{
Estimates a range of voice quality measures over all sound files in a
directory relying on signal processing from EMU-SDMS (via the [emusauce]
function), Praat (via the [praatsauce] function), or REAPER.
}
\examples{
datapath <- system.file('extdata/audio', package='sauceshelf')
sauce <- mixedsauce(datapath)
}
